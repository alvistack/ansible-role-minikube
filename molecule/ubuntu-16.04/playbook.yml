---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: all
  become: true
  remote_user: root
  roles:
    - role: bootstrap
    - role: docker
    - role: kubernetes-cni
    - role: kubectl
      kubectl_version: "{{ kubernetes_version }}"
    - role: minikube

- hosts: all
  become: true
  remote_user: root
  tasks:
    - name: minikube version
      command: minikube version
      register: result
      changed_when: result is not succeeded

    - name: patch /etc/hostname
      lineinfile:
        path: "/etc/hosts"
        regexp: "^{{ ansible_default_ipv4.address }} minikube"
        line: "{{ ansible_default_ipv4.address }} minikube"
        backrefs: true
        state: "present"

    - name: patch /etc/resolv.conf
      file:
        src: "/run/resolvconf/resolv.conf"
        dest: "/etc/resolv.conf"
        state: "link"
        force: true

    - name: patch /.dockerenv
      copy:
        dest: "/.dockerenv"
        content: ""
        force: false

    - name: start service
      service:
        name: docker
        state: started
      changed_when: false
      ignore_errors: true

    - name: minikube start
      shell: |
        set -o pipefail
        minikube start \
          --extra-config=kubeadm.ignore-preflight-errors=FileContent--proc-sys-net-bridge-bridge-nf-call-iptables,SystemVerification \
          --extra-config=kubelet.cgroup-driver=systemd \
          --extra-config=kubelet.network-plugin=cni \
          --kubernetes-version={{ kubernetes_version }} \
          --network-plugin=cni \
          --vm-driver=none
      args:
        executable: "/bin/bash"
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      ignore_errors: true

    - name: install pod network add-on (weave)
      shell: |
        set -o pipefail
        kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
      args:
        executable: "/bin/bash"
      register: result
      until: result is succeeded
      changed_when: result is not succeeded

    - name: kubectl version
      command: kubectl version
      register: result
      changed_when: result is not succeeded
